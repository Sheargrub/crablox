Planning to run file ./examples/nested_func.lox.
Doing a decouple call from an env...

Before func call:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 }

Doing a decouple call from an env...

From return():
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock)}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


After func call:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock)}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


After unmount:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 }


Before func call:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(0.0)}, {}, {}], in_closure: false, cur_closure: None, self_mounts: 0 }


From print():
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(0.0)}, {}, {}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(1.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}, {}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


After func call:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(0.0)}, {}, {}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(1.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


After unmount:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(0.0)}, {}, {}], in_closure: false, cur_closure: None, self_mounts: 0 }


Before func call:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(1.0)}, {}, {}], in_closure: false, cur_closure: None, self_mounts: 0 }


From print():
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(1.0)}, {}, {}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(1.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}, {}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


After func call:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(1.0)}, {}, {}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(1.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


After unmount:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(1.0)}, {}, {}], in_closure: false, cur_closure: None, self_mounts: 0 }


Before func call:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(2.0)}, {}, {}], in_closure: false, cur_closure: None, self_mounts: 0 }


From print():
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(2.0)}, {}, {}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(1.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}, {}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


After func call:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(2.0)}, {}, {}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(1.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


After unmount:
LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "counter": CallLit(Function("count", "counter", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"makeCounter": CallLit(Function("makeCounter", "makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false)), "clock": CallLit(Clock)}, {}, {"i": Number(0.0), "count": CallLit(Function("count", "count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(2.0)}, {}, {}], in_closure: false, cur_closure: None, self_mounts: 0 }

1
1
1
