Planning to run file ./examples/nested_func.lox.

Closure:
RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }


After func call:
LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


Closure:
RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}, {}, {"count": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false)), "i": Number(0.0)}], in_closure: false, cur_closure: None, self_mounts: 0 } }


After func call:
LoxEnvironment { nodes: [{"counter": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}, {}, {"count": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false)), "i": Number(0.0)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(0.0)}, {}, {}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}, {}, {"count": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false)), "i": Number(1.0)}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


Closure:
RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}, {}, {"count": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false)), "i": Number(0.0)}], in_closure: false, cur_closure: None, self_mounts: 0 } }


After func call:
LoxEnvironment { nodes: [{"counter": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}, {}, {"count": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false)), "i": Number(0.0)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(1.0)}, {}, {}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}, {}, {"count": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false)), "i": Number(1.0)}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }


Closure:
RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}, {}, {"count": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false)), "i": Number(0.0)}], in_closure: false, cur_closure: None, self_mounts: 0 } }


After func call:
LoxEnvironment { nodes: [{"counter": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}, {}, {"count": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false)), "i": Number(0.0)}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false)), "clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}], in_closure: false, cur_closure: None, self_mounts: 0 } }), false))}, {"i": Number(2.0)}, {}, {}], in_closure: true, cur_closure: Some(RefCell { value: LoxEnvironment { nodes: [{"clock": CallLit(Clock), "makeCounter": CallLit(Function("makeCounter", [], [Decl("i", LitExp(Number(0.0))), Fun("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))]), Return(Identifier("count"), 8)], None, false))}, {}, {"count": CallLit(Function("count", [], [Expr(Assignment("i", Binary { left: Identifier("i"), op: Add, right: LitExp(Number(1.0)) })), Print(Identifier("i"))], None, false)), "i": Number(1.0)}, {}], in_closure: false, cur_closure: None, self_mounts: 0 } }), self_mounts: 0 }

1
1
1
